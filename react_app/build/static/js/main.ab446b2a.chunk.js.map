{"version":3,"sources":["constants/index.js","pages/IndexPage.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","redux/session/sessionTypes.js","redux/session/sessionReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["API_URL","process","withRouter","props","useState","msg","setMsg","trainingDict","setTrainingDict","attacksDict","setAttacksDict","isTraining","setIsTraining","setIsAttacks","isPreprocessing","setIsPreprocessing","loading","setLoading","spinnerColor","override","css","useEffect","getInitData","useHistory","axios","post","then","res","data","ok","console","log","catch","err","Row","style","padding","margin","Col","xs","sm","md","lg","xl","Button","disabled","onClick","size","variant","marginLeft","marginBottom","training_dict","fontSize","attacks_dict","color","Alert","Object","keys","length","Table","striped","bordered","hover","accuracy","mse","score","actual_label","predicted_label","FGSM","BIM","PGD","CW","history","$","on","not","this","removeClass","toggleClass","link_dict","Array","from","document","getElementsByClassName","map","item","location","pathname","innerHTML","classList","add","remove","redirectPage","page","push","Navbar","className","collapseOnSelect","expand","bg","Brand","cursor","fontStyle","Toggle","aria-controls","Collapse","id","Nav","Link","Footer","App","paddingTop","exact","path","component","IndexPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SIGN_IN","SIGN_OUT","CLEAR_SESSION","USER_CREATED_SUCCESS","USER_DATA","initialState","isLoggedIn","userCreatedSuccess","userData","sessionReducer","state","action","type","payload","rootReducer","combineReducers","session","store","createStore","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ab446b2a.chunk.js","sourcesContent":["export const API_URL = process.env.REACT_APP_API_URL;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport '../static/css/custom.css'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport Alert from 'react-bootstrap/Alert'\nimport { API_URL } from '../constants/index'\nimport axios from 'axios'\nimport Button from 'react-bootstrap/Button'\nimport { css } from \"@emotion/react\"\nimport ClipLoader from \"react-spinners/ClipLoader\"\nimport {\n  FaFire,\n  FaMicrochip,\n  FaPlay,\n} from \"react-icons/fa\";\n\n\nconst IndexPage = (props) => {\n  \n  const [msg, setMsg] = useState(\"\");\n  const [trainingDict, setTrainingDict] = useState({});\n  const [attacksDict, setAttacksDict] = useState({});\n  const [isTraining, setIsTraining] = useState(false);\n  const [isAttacks, setIsAttacks] = useState(false);\n  const [isPreprocessing, setIsPreprocessing] = useState(false);\n  let [loading, setLoading] = useState(false);\n  let [spinnerColor, setSpinnerColor] = useState(\"#0879FA\");\n\n  const override = css`\n        justify-content: center; \n        align-items: center; \n        padding-top:1px;\n        margin-top: 11%;\n  `;\n\n  useEffect(() => {\n    getInitData();\n  }, [])\n\n  const history = useHistory();\n\n  const redirectPage = (page) => {\n      history.push(page);\n  }\n\n  const getInitData = () => {\n      let post_data = {};\n      setLoading(true);\n      axios.post(API_URL+'get_data/', post_data).then((res) => {\n        if (res.data.ok) {\n            setLoading(false);\n            let msg = res.data.msg;\n            setMsg(msg);\n        } else {\n          setLoading(false);\n          console.log('Some error occured.')\n        }\n      }).catch((err) => {\n          setLoading(false);\n          console.log(err);\n      });\n  }\n\n  const preprocess = () => {\n      let post_data = {};\n      setIsPreprocessing(true);\n      setIsAttacks(false);\n      setIsTraining(false);\n      setLoading(true);\n      axios.post(API_URL+'preprocessing/', post_data).then((res) => {\n        if (res.data.ok) {\n            setLoading(false);\n            let msg = res.data.msg;\n            setMsg(msg);\n        } else {\n          setLoading(false);\n          console.log('Some error occured.')\n        }\n      }).catch((err) => {\n          setLoading(false);\n          console.log(err);\n      });\n  }\n\n  const train = () => {\n      setIsTraining(true);\n      setIsAttacks(false);\n      setIsPreprocessing(false);\n      setTrainingDict({});\n      setAttacksDict({});\n      setLoading(true);\n      let post_data = {};\n      axios.post(API_URL+'training/', post_data).then((res) => {\n        if (res.data.ok) {\n            setLoading(false);\n            let msg = res.data.msg;\n            let training_dict = res.data.training_dict;\n            setTrainingDict(training_dict);\n            setMsg(msg);\n        } else {\n          setLoading(false);\n          console.log('Some error occured.')\n        }\n      }).catch((err) => {\n          setLoading(false);\n          console.log(err);\n      });\n  }\n\n  const attacks = () => {\n      setIsAttacks(true);\n      setIsTraining(false);\n      setIsPreprocessing(false);\n      setTrainingDict({});\n      setAttacksDict({});\n      setLoading(true);\n      let post_data = {};\n      axios.post(API_URL+'attacks/', post_data).then((res) => {\n        if (res.data.ok) {\n            setLoading(false);\n            let msg = res.data.msg;\n            let attacks_dict = res.data.attacks_dict;\n            setAttacksDict(attacks_dict);\n            setMsg(msg);\n        } else {\n          setLoading(false);\n          console.log('Some error occured.')\n        }\n      }).catch((err) => {\n          setLoading(false);\n          console.log(err);\n      });\n  }\n\n  return (\n    <div>\n      <Row style={{ padding: '40px 0px 0px 0px', margin: '0px' }}>\n        <Col style={{ padding: '0px', margin: '0px' }} xs={4} sm={4} md={4} lg={4} xl={4}>\n          <Button disabled={loading} onClick={() => preprocess()} size=\"sm\" variant=\"primary\">\n              Preprocess <FaMicrochip style={{ marginLeft: '5px', marginBottom: '1px' }} />\n          </Button> \n        </Col>\n        <Col style={{ padding: '0px', margin: '0px' }} xs={4} sm={4} md={4} lg={4} xl={4}>\n          <Button disabled={loading} onClick={() => train()} size=\"sm\" variant=\"success\">\n              Train <FaPlay style={{ fontSize: '12px', marginLeft: '5px', marginBottom: '1px' }} />\n          </Button> \n        </Col>\n        <Col style={{ padding: '0px', margin: '0px' }} xs={4} sm={4} md={4} lg={4} xl={4}>\n          <Button disabled={loading} onClick={() => attacks()} size=\"sm\" variant=\"warning\">\n              Attacks <FaFire style={{ marginLeft: '5px', marginBottom: '2px' }} />\n          </Button> \n        </Col>      \n      </Row>\n      <ClipLoader color={spinnerColor} loading={loading} css={override} size={100} />\n      <Row style={{ padding: '50px', margin: '0px' }}>\n        <Col style={{ padding: isTraining?'0px':'20px 300px 0px 300px', margin: '0px' }} xs={12} sm={12} md={12} lg={12} xl={12}>\n          {isPreprocessing && msg?<Alert style={{ padding: '5px' }} variant=\"success\">\n            {msg}\n          </Alert>:''}\n            {trainingDict && Object.keys(trainingDict).length > 0?<Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <td>Parameters</td>\n                  <th>Accuracy</th>\n                  <th>MSE</th>\n                  <th>Score</th>\n                  <th>Actual Label</th>\n                  <th>Predicted Label</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Output</td>\n                  <td>{trainingDict.accuracy}</td>\n                  <td>{trainingDict.mse}</td>\n                  <td>{trainingDict.score}</td>\n                  <td>{trainingDict.actual_label}</td>\n                  <td>{trainingDict.predicted_label}</td>\n                </tr>\n              </tbody>\n            </Table>:''}\n            {attacksDict && Object.keys(attacksDict).length > 0?<Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Attacks</th>\n                  <th>Accuracy</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>FGSM</td>\n                  <td>{attacksDict.FGSM} %</td>\n                </tr>\n                <tr>\n                  <td>BIM</td>\n                  <td>{attacksDict.BIM} %</td>\n                </tr>\n                <tr>\n                  <td>PGD</td>\n                  <td>{attacksDict.PGD} %</td>\n                </tr>\n                <tr>\n                  <td>CW</td>\n                  <td>{attacksDict.CW} %</td>\n                </tr>\n              </tbody>\n            </Table>:''}\n        </Col>  \n      </Row>\n    </div>\n  );\n}\n\nexport default withRouter(IndexPage);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, useHistory, Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport $ from 'jquery'\n\nconst Header = (props) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        $('a').on('click', function() {\n            $('a').css(\"color\", \"black\");\n            $('a').not(this).removeClass('underline');\n            $(this).toggleClass('underline');\n        })\n    }, [])\n\n    useEffect(() => {\n        let link_dict = {\n            '/shop/login': 'Login',\n            '/': 'Home',\n            '/download': 'Download', \n            '/shop': 'Shop',\n            '/admin': 'Admin Dashboard'\n        }\n        let links = Array.from(document.getElementsByClassName('nav_links'));\n        links.map(item => {\n            if(link_dict[history.location.pathname] === item.innerHTML){\n                item.style.color = 'black';\n                item.classList.add(\"underline\");\n            }else{\n                item.classList.remove(\"underline\");\n            }\n        })\n    }, [history.location])\n\n    const redirectPage = (page) => {\n        history.push(page);\n    }\n\n    return (\n        <Navbar className=\"fixed-top\" collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n            <Navbar.Brand style={{ cursor: 'pointer' }} onClick={() => redirectPage('/')}>\n                <p className=\"brand_name\" >Adversarial Attacks</p>\n                <p className=\"brand_tag_line\" style={{ fontStyle: 'italic' }}>\n                    Authors: <span style={{ color: '#0879FA' }}>Abhishek Kulkarni, Shreeya Joshi</span></p>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"nav_link_container ml-auto\">\n                    <Nav.Link className=\"nav_links\" onClick={() => redirectPage('/')}>Home</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n    );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Footer(props) {\n\n  const history = useHistory();\n\n  const redirectPage = (page) => {\n    history.push(page);\n  }\n\n  return (\n    <div className=\"fixed-bottom\">\n      <Navbar bg=\"light\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            {/* <Nav.Link onClick={() => redirectPage('/')} style={{ fontSize: \"0.8rem\" }}>\n              <span>©</span>\n              <span style={{ margin: '0px 5px 8px 8px' }}>2021 Copyright Adversarial Attacks</span>\n            </Nav.Link> */}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Footer;\n","import './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport IndexPage from './pages/IndexPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n          <div style={{ paddingTop: '93px' }}>\n            <Switch>\n              <Route exact path='/' component={IndexPage} />\n            </Switch>\n          </div>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SIGN_IN = \"SIGN_IN\";\n\nexport const SIGN_OUT = \"SIGN_OUT\";\n\nexport const CLEAR_SESSION = \"CLEAR_SESSION\";\n\nexport const USER_CREATED_SUCCESS = \"USER_CREATED_SUCCESS\";\n\nexport const USER_DATA = \"USER_DATA\";","import {\n  SIGN_IN,\n  SIGN_OUT,\n  CLEAR_SESSION,\n  USER_CREATED_SUCCESS,\n  USER_DATA\n} from \"./sessionTypes\";\n\nconst initialState = {\n  isLoggedIn: false,\n  userCreatedSuccess: false,\n  userData: {}\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        isLoggedIn: true,\n      };\n    case SIGN_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case CLEAR_SESSION:\n      return {\n          isLoggedIn: false,\n          userCreatedSuccess: false,\n      };\n    case USER_CREATED_SUCCESS:\n      return {\n        ...state,\n        userCreatedSuccess: true,\n      };\n    case USER_DATA:\n      return {\n        ...state,\n        userData: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n","import { combineReducers } from \"redux\";\nimport sessionReducer from \"./session/sessionReducer\";\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}